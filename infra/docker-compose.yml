services:
  postgres:
    image: postgres:16-alpine
    container_name: adv-postgres
    environment:
      POSTGRES_DB: winedb #advdb
      POSTGRES_USER: wineuser # advuser
      POSTGRES_PASSWORD: winepass # advpass
    ports:
      - "5432:5432"
    volumes:
      - adv_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wineuser -d winedb"]
      # test: ["CMD-SHELL", "pg_isready -U advuser -d advdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../services/api
      dockerfile: Dockerfile
    container_name: adv-api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/winedb
      SPRING_DATASOURCE_USERNAME: wineuser
      SPRING_DATASOURCE_PASSWORD: winepass
      # AWS Credentials (set these before running docker compose!)
      # AWS_ACCESS_KEY_ID: your-access-key-here
      # AWS_SECRET_ACCESS_KEY: your-secret-key-here
    ports:
      - "8090:8080"  # Host:Container (avoid conflict with local Spring Boot on 8080)

volumes:
  adv_pgdata:
