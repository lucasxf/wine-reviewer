# =============================================================================
# WINE REVIEWER - Environment Variables Template
# =============================================================================
# Copy this file to .env and fill with your credentials
# NEVER commit .env file to git!
# =============================================================================

# AWS Configuration (required for file upload)
# Get these from AWS IAM Console > Security Credentials
# Rotate keys periodically for security
AWS_ACCESS_KEY_ID=AKIA...YOUR_ACCESS_KEY_HERE
AWS_SECRET_ACCESS_KEY=your-secret-access-key-here

# JWT Configuration (required for authentication)
# Generate a secure random string (min 256 bits / 32 characters)
# Use: openssl rand -base64 32
JWT_SECRET=changeme-this-is-a-temporary-secret-key-for-development-only-min-256-bits

# Google OAuth (optional for MVP, required for production)
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Database Configuration (optional, docker-compose sets these)
SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/winedb
SPRING_DATASOURCE_USERNAME=wineuser
SPRING_DATASOURCE_PASSWORD=winepass

# =============================================================================
# How to set environment variables:
# =============================================================================

# Linux/macOS (temporary - current session only):
# export AWS_ACCESS_KEY_ID="AKIA..."
# export AWS_SECRET_ACCESS_KEY="..."

# Linux/macOS (permanent - add to ~/.bashrc or ~/.zshrc):
# echo 'export AWS_ACCESS_KEY_ID="AKIA..."' >> ~/.bashrc
# source ~/.bashrc

# Windows PowerShell (temporary - current session only):
# $env:AWS_ACCESS_KEY_ID="AKIA..."
# $env:AWS_SECRET_ACCESS_KEY="..."

# Windows PowerShell (permanent - User scope):
# [System.Environment]::SetEnvironmentVariable('AWS_ACCESS_KEY_ID', 'AKIA...', 'User')
# [System.Environment]::SetEnvironmentVariable('AWS_SECRET_ACCESS_KEY', '...', 'User')

# Windows CMD (temporary - current session only):
# set AWS_ACCESS_KEY_ID=AKIA...
# set AWS_SECRET_ACCESS_KEY=...

# =============================================================================
# Security Best Practices:
# =============================================================================
# 1. NEVER commit credentials to git
# 2. Rotate AWS keys every 90 days (AWS IAM > Security Credentials)
# 3. Use IAM roles in production (EC2, ECS, Lambda) instead of keys
# 4. Apply principle of least privilege (minimal IAM permissions)
# 5. Enable MFA on AWS account
# 6. Use AWS Secrets Manager or Parameter Store in production
# 7. Revoke exposed credentials immediately and rotate
